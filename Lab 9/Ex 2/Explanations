In the .l file I have a token NUMBER used to send the value of the real and imaginary part of the complex number and a token VARIABLE to send the variable name in which the complex number is stored. Before sending the variable name, I convert it to an int, so I send to yacc an integer. I will explain later why. Also I send directly the letter j, which represents the imaginary part and the corresponding symbols for operations: +, -, *, /.

In the .y file I have a structure to keep the format of a complex number: real part and imaginary part. Then I have a vector called 'memory' of 26 positions of complex numbers. this keeps on every position a complex number assigned to a variable. It has 26 positions because a variable can be from a to z which means 26 letters. A complex number will be placed on a position corresponding to a letter. That's why in lex I send the integer value of a variable. Then I have a union, which keeps the number and variable sent and a complex number. Also, I have some user defined functions for basic operations like: addition, subtraction, multiplication and division, but also for displaying a complex number and for creating a complex number from 2 numbers representing the real and the imaginary part.
